# Do not store secrets and keys in this globally accessible file.
  # Use the .env file instead and share securely.
  # Eventually, the project should move to sharing secrets via vault or similar.
# Custom settings can be made in similarly-named properties or yml files. For example:
  # For your own properties, use the myconfig.properties or myconfig.yaml in the project root.
# Profiles use their own properties. So for working in dev, create application-dev.yml.
  # For prod, use application-prod.yml. For staging, use application-stage.yml.
spring:
  application:
    name: "chattyCatty"
  config:
    import:
      - optional:file:./myconfig.properties
      - optional:file:./myconfig.yml
      - optional:file:./.env
  datasource:
    url: "jdbc:postgresql://${POSTGRES_SERVER}/${POSTGRES_INSTANCE}"
    username: "${POSTGRES_USER}"
    password: "${POSTGRES_PASSWORD}"
  jpa:
    properties:
      hibernate:
        ddl-auto: update
        dialect: org.hibernate.dialect.PostgreSQLDialect
      show-sql: true
  ai:
    ollama:
      base-url: http://host.docker.internal:11434
      init:
        pull-model-strategy: always
        timeout: 60s
        max-retries: 1
      chat:
        options:
          keep-alive: 5m
          model: llama3.2
          temperature: 0.7
    vectorstore:
      pgvector:
      index-type: HNSW
      distance-type: COSINE_DISTANCE
      dimensions: 1536
      max-document-batch-size: 10000 # Optional: Maximum number of documents per batch
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
